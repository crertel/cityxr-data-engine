version: "3.3"
services:
  db:
    image: postgres:11.6-alpine
    environment:
      POSTGRES_DB: cxr_dev
      POSTGRES_USER: cxrdev
      POSTGRES_PASSWORD: cxrdev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d cxr_dev -U cxrdev"]
      interval: 5s
      timeout: 30s
      retries: 3
    networks:
      - backend
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data

  ingest:
    depends_on:
      - db
    build:
      context: ./ingest
      dockerfile: Dockerfile
    volumes: ["./ingest:/app"]
    ports:
      - "5001:80"
    networks:
      - backend
      - frontend
    environment:
      - DEBUG=true
      - LISTEN_PORT=80
      - PG_HOST=db
      - PG_USER=cxrdev
      - PG_PASSWORD=cxrdev
      - PG_DB=cxr_dev
      - PG_PORT=5432

  server:
    depends_on:
      - db
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5002:80"
    networks:
      - backend
      - frontend

  superset:
    image: abhioncbr/docker-superset:latest
    restart: always
    environment:
      SUPERSET_ENV: local
      #GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    depends_on:
      - db
    ports:
      - 8088:8088
      #- 5003:5555
    volumes:
      - ../superset/config/:/home/superset/config/
    networks:
      - backend
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    internal: true

volumes:
  postgres_data:
